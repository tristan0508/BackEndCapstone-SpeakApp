[{"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\index.js":"1","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\App.js":"2","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\dashboard\\Dashboard.js":"4","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\header\\Header.js":"5","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageLayout.js":"6","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageHeader.js":"7","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageArea.js":"8","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\customtheme\\MaterialTheme.js":"9","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserProvider.js":"10","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\api\\agent.js":"11","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\LoginPage.js":"12","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\RegisterPage.js":"13","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatSideBar.js":"14","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatHubProvider.js":"15","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatProvider.js":"16","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatDirectMessage.js":"17","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\UserList.js":"18","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\AvatarStatus.js":"19","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\GroupMessageByDate.js":"20","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ContextProvider.js":"21","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\utilis\\utils.js":"22","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChannelMessage.js":"23"},{"size":1236,"mtime":1612638716121,"results":"24","hashOfConfig":"25"},{"size":1296,"mtime":1612799296836,"results":"26","hashOfConfig":"25"},{"size":366,"mtime":1610598699027,"results":"27","hashOfConfig":"25"},{"size":2575,"mtime":1612802398164,"results":"28","hashOfConfig":"25"},{"size":2762,"mtime":1612638716117,"results":"29","hashOfConfig":"25"},{"size":3698,"mtime":1612801529241,"results":"30","hashOfConfig":"25"},{"size":3469,"mtime":1612638716118,"results":"31","hashOfConfig":"25"},{"size":2706,"mtime":1612638716118,"results":"32","hashOfConfig":"25"},{"size":1212,"mtime":1611115818707,"results":"33","hashOfConfig":"25"},{"size":3271,"mtime":1612680574576,"results":"34","hashOfConfig":"25"},{"size":1054,"mtime":1611729122208,"results":"35","hashOfConfig":"25"},{"size":5419,"mtime":1612638716110,"results":"36","hashOfConfig":"25"},{"size":8409,"mtime":1612638716111,"results":"37","hashOfConfig":"25"},{"size":4263,"mtime":1612806886130,"results":"38","hashOfConfig":"25"},{"size":2704,"mtime":1612804276372,"results":"39","hashOfConfig":"25"},{"size":2341,"mtime":1612802201123,"results":"40","hashOfConfig":"25"},{"size":2267,"mtime":1612638716113,"results":"41","hashOfConfig":"25"},{"size":2095,"mtime":1612806851160,"results":"42","hashOfConfig":"25"},{"size":1609,"mtime":1612638716115,"results":"43","hashOfConfig":"25"},{"size":605,"mtime":1612764592966,"results":"44","hashOfConfig":"25"},{"size":182,"mtime":1612638716122,"results":"45","hashOfConfig":"25"},{"size":141,"mtime":1612638716123,"results":"46","hashOfConfig":"25"},{"size":3567,"mtime":1612804614088,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"753db5",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\index.js",[],["98","99"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\App.js",["100"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\dashboard\\Dashboard.js",["101"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\header\\Header.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageLayout.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageHeader.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageArea.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\customtheme\\MaterialTheme.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserProvider.js",["102"],"import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { history } from \"../index\"\r\nimport { UserContext } from './ContextProvider';\r\n\r\n\r\n\r\n\r\nexport function UserProvider(props) {\r\n    const apiUrl = \"/api/user\";\r\n    const user = localStorage.getItem(\"user\");\r\n    const userToken = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const displayName = localStorage.getItem(\"displayName\");\r\n    const userImage = localStorage.getItem(\"userImage\");\r\n    const firebaseId = localStorage.getItem(\"firebaseId\");\r\n    const [isRegister, setIsRegister] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(user != null);\r\n    const [token, setToken] = useState(userToken ? userToken : \"\");\r\n\r\n    \r\n\r\n\r\n    const login = (email, pw) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n        .then((signInResponse) => getUser(signInResponse.user.uid))\r\n        .then((user) => {\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            localStorage.setItem(\"userImage\", user.image !== null ? user.image : \"\");\r\n            localStorage.setItem(\"userId\", user.id);\r\n            localStorage.setItem(\"displayName\", `${user.firstName} ${user.lastName}`);\r\n            localStorage.setItem(\"firebaseId\", user.firebaseUserId);\r\n            setIsLoggedIn(true);\r\n        })\r\n    };\r\n    \r\n    const logout = () => {\r\n        return firebase.auth().signOut()\r\n        .then(() => {\r\n            localStorage.clear()\r\n            setIsLoggedIn(false);\r\n            history.push(\"/\")\r\n            window.onresize = null;\r\n        });\r\n    };\r\n\r\n\r\n    const register = (user, password) => {\r\n        return firebase.auth().createUserWithEmailAndPassword(user.email, password)\r\n            .then((createResponse) => saveUser({ ...user, firebaseUserId: createResponse.user.uid }))\r\n            .then((savedUser) => {\r\n                localStorage.setItem(\"user\", JSON.stringify(savedUser));\r\n                setIsLoggedIn(true);\r\n            });\r\n    };\r\n\r\n    const getToken = () => firebase.auth().currentUser.getIdToken()\r\n        .then(res => {\r\n            localStorage.setItem(\"token\", res)\r\n            setToken(res)\r\n        })\r\n\r\n    const getUser = (firebaseUserId) => {\r\n        return getToken().then((token) =>\r\n            fetch(`${apiUrl}/${firebaseUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )};\r\n\r\n\r\n    const saveUser = (user) => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            }).then(resp => resp.json()));\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ isLoggedIn, token, setIsLoggedIn, login, logout, register, getToken, setIsRegister, userId, displayName,\r\n        userImage, firebaseId }}>\r\n        {props.children}\r\n        </UserContext.Provider>\r\n\r\n    );\r\n}\r\n","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\api\\agent.js",["103"],"import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n    get: (url) => axios.get(url).then(responseBody),\r\n    post: (url, body) => axios.get(url, body).then(responseBody),\r\n    put: (url, body) => axios.get(url, body).then(responseBody),\r\n    del: (url) => axios.get(url).then(responseBody),\r\n    getAuth: (url, firebaseUserId, token) => axios.get(url, firebaseUserId, token)\r\n    .then(responseBody)\r\n};\r\n\r\nconst Messages = {\r\n    list: (userId) => requests.get(`/messages/${userId}`)\r\n}\r\n\r\nconst User = {\r\n    user: (firebaseUserId, token) => requests.get(`/user/${firebaseUserId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nconst UserChat = {\r\n    userChat: (token) => requests.get('/chat/', {\r\n         headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n}\r\nexport default {\r\n    Messages,\r\n    User,\r\n    UserChat\r\n}",["104","105"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\LoginPage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\RegisterPage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatSideBar.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatHubProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatDirectMessage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\UserList.js",["106"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\AvatarStatus.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\GroupMessageByDate.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ContextProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\utilis\\utils.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChannelMessage.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":19},{"ruleId":"115","severity":1,"message":"116","line":28,"column":8,"nodeType":"117","endLine":28,"endColumn":10,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":18,"column":12,"nodeType":"113","messageId":"114","endLine":18,"endColumn":22},{"ruleId":"120","severity":1,"message":"121","line":36,"column":1,"nodeType":"122","endLine":40,"endColumn":2},{"ruleId":"107","replacedBy":"123"},{"ruleId":"109","replacedBy":"124"},{"ruleId":"115","severity":1,"message":"125","line":16,"column":8,"nodeType":"117","endLine":16,"endColumn":10,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'useParams' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetUserChat' and 'HubConnection'. Either include them or remove the dependency array.","ArrayExpression",["129"],"'isRegister' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["127"],["128"],"React Hook useEffect has a missing dependency: 'GetAllUsers'. Either include it or remove the dependency array.",["130"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [GetUserChat, HubConnection]",{"range":"135","text":"136"},"Update the dependencies array to be: [GetAllUsers]",{"range":"137","text":"138"},[1081,1083],"[GetUserChat, HubConnection]",[583,585],"[GetAllUsers]"]