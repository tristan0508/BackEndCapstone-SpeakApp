[{"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\index.js":"1","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\App.js":"2","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\dashboard\\Dashboard.js":"4","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\header\\Header.js":"5","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageLayout.js":"6","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageHeader.js":"7","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageArea.js":"8","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\customtheme\\MaterialTheme.js":"9","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserProvider.js":"10","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\api\\agent.js":"11","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\LoginPage.js":"12","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\RegisterPage.js":"13","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatSideBar.js":"14","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatHubProvider.js":"15","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatProvider.js":"16","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatDirectMessage.js":"17","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\UserList.js":"18","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\AvatarStatus.js":"19","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\GroupMessageByDate.js":"20","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ContextProvider.js":"21","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\utilis\\utils.js":"22","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChannelMessage.js":"23","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\EditMessage.js":"24","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\SnackBar.js":"25","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\GroupList.js":"26"},{"size":1236,"mtime":1612638716121,"results":"27","hashOfConfig":"28"},{"size":1253,"mtime":1612842931985,"results":"29","hashOfConfig":"28"},{"size":366,"mtime":1610598699027,"results":"30","hashOfConfig":"28"},{"size":2701,"mtime":1612990403908,"results":"31","hashOfConfig":"28"},{"size":2762,"mtime":1612638716117,"results":"32","hashOfConfig":"28"},{"size":5179,"mtime":1612888502541,"results":"33","hashOfConfig":"28"},{"size":3469,"mtime":1612638716118,"results":"34","hashOfConfig":"28"},{"size":2706,"mtime":1612638716118,"results":"35","hashOfConfig":"28"},{"size":1212,"mtime":1611115818707,"results":"36","hashOfConfig":"28"},{"size":3483,"mtime":1613018142361,"results":"37","hashOfConfig":"28"},{"size":1054,"mtime":1611729122208,"results":"38","hashOfConfig":"28"},{"size":5419,"mtime":1612638716110,"results":"39","hashOfConfig":"28"},{"size":8409,"mtime":1612638716111,"results":"40","hashOfConfig":"28"},{"size":4730,"mtime":1613017669177,"results":"41","hashOfConfig":"28"},{"size":2787,"mtime":1612888502542,"results":"42","hashOfConfig":"28"},{"size":3981,"mtime":1612991649838,"results":"43","hashOfConfig":"28"},{"size":3117,"mtime":1612990085897,"results":"44","hashOfConfig":"28"},{"size":2105,"mtime":1612989072361,"results":"45","hashOfConfig":"28"},{"size":1609,"mtime":1612638716115,"results":"46","hashOfConfig":"28"},{"size":666,"mtime":1612890058604,"results":"47","hashOfConfig":"28"},{"size":182,"mtime":1612638716122,"results":"48","hashOfConfig":"28"},{"size":141,"mtime":1612638716123,"results":"49","hashOfConfig":"28"},{"size":3567,"mtime":1612888502536,"results":"50","hashOfConfig":"28"},{"size":2203,"mtime":1612888502538,"results":"51","hashOfConfig":"28"},{"size":1126,"mtime":1612888502540,"results":"52","hashOfConfig":"28"},{"size":3943,"mtime":1613016927736,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"753db5",{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"56"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"56"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\index.js",[],["112","113"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\App.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\dashboard\\Dashboard.js",["114"],"import React, { useEffect, useState, useContext, useRef } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport MessageArea from '../messagearea/MessageArea';\r\nimport MessageHeader from '../messagearea/MessageHeader';\r\nimport MessageLayout from '../messagearea/MessageLayout';\r\nimport ChatSideBar from '../chatsidebar/ChatSideBar';\r\nimport { ChatDirectMessage } from '../chatsidebar/ChatDirectMessage';\r\nimport { ChatContext, ChatHubContext } from '../../providers/ContextProvider';\r\nimport { ChannelMessage } from '../chatsidebar/ChannelMessage';\r\nimport { GroupList } from '../chatsidebar/GroupList';\r\n\r\nconst Dashboard = () => {\r\n    const [openMenu, setOpenMenu] = useState(false)\r\n    const { HubConnection } = useContext(ChatHubContext);\r\n    const { GetUserChat, GetGroups } = useContext(ChatContext)\r\n\r\n    const scrollToEnd = () => {\r\n        let chatElement = document.getElementById('chat');\r\n        if (!chatElement) {\r\n            return 0;\r\n        }\r\n        chatElement.scrollTop = chatElement.scrollHeight;\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToEnd()\r\n        HubConnection()\r\n        GetUserChat()\r\n        GetGroups()\r\n    }, [])\r\n\r\n \r\n\r\n    const chatContainer = useRef();\r\n    const sideContainer = useRef();\r\n\r\n    return (\r\n        <Grid container >\r\n            <Grid container item xs={1} >\r\n                \r\n            </Grid>\r\n            <Grid container item xs={3} justify=\"flex-end\">\r\n                <ChatSideBar />\r\n            </Grid>\r\n\r\n            <Grid id=\"chat-container\" className=\"chat-grid-item\" container item xs={openMenu ? 6 : 8}>\r\n                <MessageHeader \r\n                openMenu={openMenu}\r\n                setOpenMenu={setOpenMenu}\r\n                chatContainer={chatContainer}\r\n                sideContainer={sideContainer} />\r\n\r\n                <Grid id=\"chat-grid-container\" ref={chatContainer} container item className=\"chat-grid-container\" alignItems=\"flex-start\" >\r\n                    <Grid id=\"chat\" className=\"messages\" container item xs={8}>\r\n                        <ChannelMessage />\r\n                        <ChatDirectMessage />\r\n                        <GroupList />\r\n                        <MessageLayout />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item className=\"messageContainer\">\r\n                    <Grid item className=\"message-area-item\">\r\n                        <MessageArea />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid id=\"side-container\" ref={sideContainer} container item className=\"maybe\" xs={2}>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\header\\Header.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageLayout.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageHeader.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageArea.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\customtheme\\MaterialTheme.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\api\\agent.js",["115"],"import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n    get: (url) => axios.get(url).then(responseBody),\r\n    post: (url, body) => axios.get(url, body).then(responseBody),\r\n    put: (url, body) => axios.get(url, body).then(responseBody),\r\n    del: (url) => axios.get(url).then(responseBody),\r\n    getAuth: (url, firebaseUserId, token) => axios.get(url, firebaseUserId, token)\r\n    .then(responseBody)\r\n};\r\n\r\nconst Messages = {\r\n    list: (userId) => requests.get(`/messages/${userId}`)\r\n}\r\n\r\nconst User = {\r\n    user: (firebaseUserId, token) => requests.get(`/user/${firebaseUserId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nconst UserChat = {\r\n    userChat: (token) => requests.get('/chat/', {\r\n         headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n}\r\nexport default {\r\n    Messages,\r\n    User,\r\n    UserChat\r\n}",["116","117"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\LoginPage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\RegisterPage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatSideBar.js",["118"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatHubProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatDirectMessage.js",["119","120"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport { ChatContext } from '../../providers/ContextProvider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Container, Grid } from '@material-ui/core';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport { UserList } from './UserList';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    modal: {\r\n      display: 'flex',\r\n      padding: theme.spacing(1),\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      width: 400,\r\n      height: 300,\r\n      overflow: 'auto',\r\n      backgroundColor: '#192734',\r\n      border: '2px solid white',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n      color: 'white'\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'fixed',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n  }));\r\n\r\n\r\nexport const ChatDirectMessage = () => {\r\n    const classes = useStyles();\r\n    const { openModal, setOpenModal, allUsers, openGroupModal, setOpenGroupModal } = useContext(ChatContext)\r\n    const [searchTerms, setSearchTerms] = useState(\"\")\r\n    const [filteredUsers, setFilteredUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        console.log(allUsers)\r\n        if (searchTerms !== \"\") {\r\n            const subset = allUsers.filter(user => user.displayName.toLowerCase().includes(searchTerms.toLowerCase().trim()))\r\n            console.log(subset)\r\n            setFilteredUsers(subset)\r\n        } else {\r\n            setFilteredUsers(allUsers)\r\n        }\r\n    }, [searchTerms, allUsers])\r\n\r\n  \r\n\r\n    return (\r\n        <div>\r\n            <Modal\r\n                className={classes.modal}\r\n                open={openModal}\r\n                onBackdropClick={() => setOpenModal(false)}\r\n                aria-labelledby=\"simple-modal-title\"\r\n                aria-describedby=\"simple-modal-description\"\r\n            >\r\n                <Container className={classes.paper}>\r\n                <Grid container >\r\n                    <Grid item xs={12}>\r\n                    <InputBase\r\n                    placeholder={`Type the name of the person...`}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    style={{ border: '1px solid white', width: '100%', height: '40px',\r\n                             borderRadius: '5px', padding: '5px' }}\r\n                    onKeyUp={\r\n                        (keyEvent) => setSearchTerms(keyEvent.currentTarget.value)\r\n                    }\r\n                    onChange={(keyEvent) => keyEvent.currentTarget.value === ''? setSearchTerms('') : null}\r\n                    />\r\n                    \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <UserList filteredUsers={filteredUsers}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                </Container>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\UserList.js",["121"],"import React, { useEffect, useContext } from 'react';\r\nimport { Container, ListItem } from '@material-ui/core';\r\nimport AvatarStatus from '../customcomponents/AvatarStatus';\r\nimport { UserContext, ChatContext, ChatHubContext } from '../../providers/ContextProvider';\r\n\r\n\r\n\r\n\r\nexport const UserList = ({filteredUsers}) => {\r\n    const { GetAllUsers, userOnline, setOpenModal, GetUserChat } = useContext(ChatContext)\r\n    const { displayName, userImage } = useContext(UserContext);\r\n    const { AddChat } = useContext(ChatHubContext)\r\n\r\n    useEffect(() => {\r\n        GetAllUsers()\r\n    }, [])\r\n\r\n    const handleReceiver = (first, last, image, email) => {\r\n        const Chat = {\r\n            type: \"Direct Message\",\r\n            sender: displayName,\r\n            receiver: `${first} ${last}`,\r\n            senderImage: userImage,\r\n            receiverImage: image ? image : null,\r\n            receiverEmail: email\r\n        }\r\n\r\n        AddChat(Chat)\r\n        .then(() => GetUserChat())\r\n        setOpenModal(false)\r\n    }\r\n\r\n    return (\r\n\r\n        <ListItem className=\"userListContainer\" style={{ marginTop: '5px',borderRadius: '5px'}}>\r\n           { filteredUsers.map(u => {\r\n                return <div key={u.id} className=\"userList\">\r\n                        <AvatarStatus src={u.image} online={userOnline} />\r\n                            <Container style={{ marginTop: '7px', paddingLeft: '10px'}} >\r\n                                <button \r\n                                 onClick={() => \r\n                                    handleReceiver(\r\n                                        u.firstName,\r\n                                        u.lastName,\r\n                                        u.image,\r\n                                        u.email\r\n                                    )} \r\n                                 className=\"userListBtn\">\r\n                                    {u.firstName} {u.lastName} # {u.displayName}\r\n                                </button>\r\n                            </Container>\r\n                        </div>\r\n\r\n            })}\r\n        </ListItem>\r\n    )\r\n}","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\AvatarStatus.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\GroupMessageByDate.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ContextProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\utilis\\utils.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChannelMessage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\EditMessage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\SnackBar.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\GroupList.js",[],{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":30,"column":8,"nodeType":"128","endLine":30,"endColumn":10,"suggestions":"129"},{"ruleId":"130","severity":1,"message":"131","line":36,"column":1,"nodeType":"132","endLine":40,"endColumn":2},{"ruleId":"122","replacedBy":"133"},{"ruleId":"124","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":89,"column":54,"nodeType":"137","messageId":"138","endLine":89,"endColumn":56},{"ruleId":"139","severity":1,"message":"140","line":42,"column":48,"nodeType":"141","messageId":"142","endLine":42,"endColumn":62},{"ruleId":"139","severity":1,"message":"143","line":42,"column":64,"nodeType":"141","messageId":"142","endLine":42,"endColumn":81},{"ruleId":"126","severity":1,"message":"144","line":16,"column":8,"nodeType":"128","endLine":16,"endColumn":10,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetGroups', 'GetUserChat', and 'HubConnection'. Either include them or remove the dependency array.","ArrayExpression",["148"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["146"],["147"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'openGroupModal' is assigned a value but never used.","Identifier","unusedVar","'setOpenGroupModal' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'GetAllUsers'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [GetGroups, GetUserChat, HubConnection]",{"range":"154","text":"155"},"Update the dependencies array to be: [GetAllUsers]",{"range":"156","text":"157"},[1168,1170],"[GetGroups, GetUserChat, HubConnection]",[588,590],"[GetAllUsers]"]