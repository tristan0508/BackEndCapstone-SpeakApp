[{"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\index.js":"1","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\App.js":"2","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\dashboard\\Dashboard.js":"4","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\header\\Header.js":"5","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageLayout.js":"6","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageHeader.js":"7","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageArea.js":"8","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\customtheme\\MaterialTheme.js":"9","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserProvider.js":"10","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\api\\agent.js":"11","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\LoginPage.js":"12","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\ApplicationViews.js":"13","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\RegisterPage.js":"14","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatSideBar.js":"15","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatHubProvider.js":"16","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatProvider.js":"17","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatDirectMessage.js":"18","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\UserList.js":"19","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserContext.js":"20","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\AvatarStatus.js":"21"},{"size":894,"mtime":1612461217660,"results":"22","hashOfConfig":"23"},{"size":583,"mtime":1612332253930,"results":"24","hashOfConfig":"23"},{"size":366,"mtime":1610598699027,"results":"25","hashOfConfig":"23"},{"size":2261,"mtime":1612414591744,"results":"26","hashOfConfig":"23"},{"size":2754,"mtime":1612388840194,"results":"27","hashOfConfig":"23"},{"size":2532,"mtime":1612379156795,"results":"28","hashOfConfig":"23"},{"size":3759,"mtime":1612421035812,"results":"29","hashOfConfig":"23"},{"size":2753,"mtime":1611953808704,"results":"30","hashOfConfig":"23"},{"size":1212,"mtime":1611115818707,"results":"31","hashOfConfig":"23"},{"size":3261,"mtime":1612382043849,"results":"32","hashOfConfig":"23"},{"size":1054,"mtime":1611729122208,"results":"33","hashOfConfig":"23"},{"size":5545,"mtime":1612382181550,"results":"34","hashOfConfig":"23"},{"size":1306,"mtime":1612388717384,"results":"35","hashOfConfig":"23"},{"size":8401,"mtime":1612414835750,"results":"36","hashOfConfig":"23"},{"size":4060,"mtime":1612388839232,"results":"37","hashOfConfig":"23"},{"size":2676,"mtime":1612382241220,"results":"38","hashOfConfig":"23"},{"size":2303,"mtime":1612382250709,"results":"39","hashOfConfig":"23"},{"size":2264,"mtime":1612250007288,"results":"40","hashOfConfig":"23"},{"size":1998,"mtime":1612388838121,"results":"41","hashOfConfig":"23"},{"size":116,"mtime":1612382027545,"results":"42","hashOfConfig":"23"},{"size":1609,"mtime":1612416730190,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"753db5",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\index.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\App.js",[],["94","95"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\dashboard\\Dashboard.js",["96"],"import React, { useEffect, useState, useContext } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport MessageArea from '../messagearea/MessageArea';\r\nimport MessageHeader from '../messagearea/MessageHeader';\r\nimport MessageLayout from '../messagearea/MessageLayout';\r\nimport { ChatHubContext } from '../../providers/ChatHubProvider';\r\nimport ChatSideBar from '../chatsidebar/ChatSideBar';\r\nimport { ChatDirectMessage } from '../chatsidebar/ChatDirectMessage';\r\nimport { ChatContext } from '../../providers/ChatProvider';\r\n\r\nconst Dashboard = () => {\r\n    const [openMenu, setOpenMenu] = useState(false)\r\n    const { HubConnection } = useContext(ChatHubContext);\r\n    const { GetUserChat } = useContext(ChatContext)\r\n\r\n   \r\n    const scrollToEnd = () => {\r\n        let chatElement = document.getElementById('chat');\r\n        if (!chatElement) {\r\n            return 0;\r\n        }\r\n        chatElement.scrollTop = chatElement.scrollHeight;\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollToEnd()\r\n        HubConnection()\r\n        GetUserChat()\r\n    }, [])\r\n\r\n    return (\r\n        <Grid container >\r\n            <Grid container item xs={1} >\r\n                \r\n            </Grid>\r\n            <Grid container item xs={3} justify=\"flex-end\">\r\n                <ChatSideBar />\r\n            </Grid>\r\n\r\n            <Grid id=\"chat-container\" className=\"chat-grid-item\" container item xs={openMenu ? 6 : 8}>\r\n                <MessageHeader openMenu={openMenu} setOpenMenu={setOpenMenu} />\r\n\r\n                <Grid id=\"chat-grid-container\" container item className=\"chat-grid-container\" alignItems=\"flex-start\" >\r\n                    <Grid id=\"chat\" className=\"messages\" container item xs={8}>\r\n                        <ChatDirectMessage />\r\n                        <MessageLayout />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid container item className=\"messageContainer\">\r\n                    <Grid item className=\"message-area-item\">\r\n                        <MessageArea />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Grid id=\"side-container\" container item className=\"maybe\" xs={2}>\r\n\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\header\\Header.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageLayout.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageHeader.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\messagearea\\MessageArea.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\customtheme\\MaterialTheme.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserProvider.js",["97"],"import React, { useState } from \"react\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport { history } from \"../index\"\r\nimport UserContext from './UserContext';\r\n\r\n\r\n\r\n\r\nexport function UserProvider(props) {\r\n    const apiUrl = \"/api/user\";\r\n    const user = localStorage.getItem(\"user\");\r\n    const userToken = localStorage.getItem(\"token\");\r\n    const userId = localStorage.getItem(\"userId\");\r\n    const displayName = localStorage.getItem(\"displayName\");\r\n    const userImage = localStorage.getItem(\"userImage\");\r\n    const firebaseId = localStorage.getItem(\"firebaseId\");\r\n    const [isRegister, setIsRegister] = useState(false);\r\n    const [isLoggedIn, setIsLoggedIn] = useState(user != null);\r\n    const [token, setToken] = useState(userToken ? userToken : \"\");\r\n\r\n    \r\n\r\n\r\n    const login = (email, pw) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n        .then((signInResponse) => getUser(signInResponse.user.uid))\r\n        .then((user) => {\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            localStorage.setItem(\"userImage\", user.image !== null ? user.image : \"\");\r\n            localStorage.setItem(\"userId\", user.id);\r\n            localStorage.setItem(\"displayName\", `${user.firstName} ${user.lastName}`);\r\n            localStorage.setItem(\"firebaseId\", user.firebaseUserId);\r\n            setIsLoggedIn(true);\r\n        })\r\n    };\r\n    \r\n    const logout = () => {\r\n        return firebase.auth().signOut()\r\n        .then(() => {\r\n            localStorage.clear()\r\n            setIsLoggedIn(false);\r\n            history.push(\"/\")\r\n            window.onresize = null;\r\n        });\r\n    };\r\n\r\n\r\n    const register = (user, password) => {\r\n        return firebase.auth().createUserWithEmailAndPassword(user.email, password)\r\n            .then((createResponse) => saveUser({ ...user, firebaseUserId: createResponse.user.uid }))\r\n            .then((savedUser) => {\r\n                localStorage.setItem(\"user\", JSON.stringify(savedUser));\r\n                setIsLoggedIn(true);\r\n            });\r\n    };\r\n\r\n    const getToken = () => firebase.auth().currentUser.getIdToken()\r\n        .then(res => {\r\n            localStorage.setItem(\"token\", res)\r\n            setToken(res)\r\n        })\r\n\r\n    const getUser = (firebaseUserId) => {\r\n        return getToken().then((token) =>\r\n            fetch(`${apiUrl}/${firebaseUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`\r\n                }\r\n            }).then(resp => resp.json())\r\n        )};\r\n\r\n\r\n    const saveUser = (user) => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(user)\r\n            }).then(resp => resp.json()));\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider value={{ isLoggedIn, token, setIsLoggedIn, login, logout, register, getToken, setIsRegister, userId, displayName,\r\n        userImage, firebaseId }}>\r\n        {props.children}\r\n        </UserContext.Provider>\r\n\r\n    );\r\n}","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\api\\agent.js",["98"],"import axios from 'axios';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response) => response.data;\r\n\r\nconst requests = {\r\n    get: (url) => axios.get(url).then(responseBody),\r\n    post: (url, body) => axios.get(url, body).then(responseBody),\r\n    put: (url, body) => axios.get(url, body).then(responseBody),\r\n    del: (url) => axios.get(url).then(responseBody),\r\n    getAuth: (url, firebaseUserId, token) => axios.get(url, firebaseUserId, token)\r\n    .then(responseBody)\r\n};\r\n\r\nconst Messages = {\r\n    list: (userId) => requests.get(`/messages/${userId}`)\r\n}\r\n\r\nconst User = {\r\n    user: (firebaseUserId, token) => requests.get(`/user/${firebaseUserId}`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    })\r\n}\r\n\r\nconst UserChat = {\r\n    userChat: (token) => requests.get('/chat/', {\r\n         headers: {\r\n            Authorization: `Bearer ${token}`,\r\n            \"Content-Type\": \"application/json\"\r\n        }\r\n    })\r\n}\r\nexport default {\r\n    Messages,\r\n    User,\r\n    UserChat\r\n}",["99","100"],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\LoginPage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\ApplicationViews.js",["101"],"import React, { useContext } from \"react\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport Header from '../components/header/Header';\r\nimport Dashboard from '../components/dashboard/Dashboard';\r\nimport { Fragment } from \"react\";\r\nimport RegisterPage from \"./RegisterPage\";\r\nimport LoginPage from \"./LoginPage\";\r\nimport UserContext from \"../providers/UserContext\";\r\n\r\nconst ApplicationsViews = () => {\r\n    const { isLoggedIn } = useContext(UserContext)\r\n    return (\r\n        <Switch>\r\n            <Route exact path ='/'>\r\n                {!isLoggedIn ? <LoginPage /> : <Redirect to='/dashboard'/>}\r\n            </Route>\r\n            <Route exact path ='/register'>\r\n                {!isLoggedIn ? <RegisterPage /> : <Redirect to='/dashboard'/>}\r\n            </Route>\r\n            <Route path={'/dashboard'} render={() => (\r\n                <Fragment>\r\n                    <Header />\r\n                    <Route >\r\n                        {isLoggedIn ? <Dashboard /> : <Redirect to='/'/>}\r\n                    </Route>\r\n                    <Route path={'/dashboard/chat/:id'}/>\r\n                </Fragment>\r\n\r\n\r\n            )}/>\r\n            <Route>\r\n                <Redirect to='/'/>\r\n            </Route>\r\n        </Switch>\r\n    )\r\n}\r\n\r\nexport default ApplicationsViews;","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\RegisterPage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatSideBar.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatHubProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\ChatProvider.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\ChatDirectMessage.js",[],"C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\chatsidebar\\UserList.js",["102","103"],"import React, { useEffect, useContext } from 'react';\r\nimport { ChatContext } from '../../providers/ChatProvider';\r\nimport { Container, ListItem } from '@material-ui/core';\r\nimport AvatarStatus from '../customcomponents/AvatarStatus';\r\nimport { ChatHubContext } from '../../providers/ChatHubProvider';\r\nimport UserContext from '../../providers/UserContext';\r\n\r\n\r\n\r\n\r\nexport const UserList = () => {\r\n    const { GetAllUsers, allUsers, userOnline, AddChat } = useContext(ChatContext)\r\n    const { displayName, userImage } = useContext(UserContext);\r\n    useEffect(() => {\r\n        GetAllUsers()\r\n    }, [])\r\n\r\n    const handleReceiver = (first, last, image) => {\r\n     \r\n\r\n        const Chat = {\r\n            name: displayName,\r\n            type: \"Direct Message\",\r\n            sender: displayName,\r\n            receiver: `${first} ${last}`,\r\n            senderImage: userImage,\r\n            receiverImage: image ? image : null\r\n        }\r\n\r\n        AddChat(Chat)\r\n    }\r\n\r\n    return (\r\n\r\n        <ListItem className=\"userListContainer\" style={{ marginTop: '5px',borderRadius: '5px'}}>\r\n           { allUsers.map(u => {\r\n                return <div key={u.id} className=\"userList\">\r\n                        <AvatarStatus src={u.image} online={userOnline} />\r\n                            <Container style={{ marginTop: '7px', paddingLeft: '10px'}} >\r\n                                <button \r\n                                 onClick={() => \r\n                                    handleReceiver(\r\n                                        u.firstName,\r\n                                        u.lastName,\r\n                                        u.image\r\n                                    )} \r\n                                 className=\"userListBtn\">\r\n                                    {u.firstName} {u.lastName} # {u.displayName}\r\n                                </button>\r\n                            </Container>\r\n                        </div>\r\n\r\n            })}\r\n        </ListItem>\r\n    )\r\n}","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\providers\\UserContext.js",["104"],"import React, { createContext } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nexport default UserContext;","C:\\Users\\Tristan\\workspace\\speak-app\\Speak-app\\Speak-app\\client\\src\\components\\customcomponents\\AvatarStatus.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":29,"column":8,"nodeType":"111","endLine":29,"endColumn":10,"suggestions":"112"},{"ruleId":"113","severity":1,"message":"114","line":18,"column":12,"nodeType":"115","messageId":"116","endLine":18,"endColumn":22},{"ruleId":"117","severity":1,"message":"118","line":36,"column":1,"nodeType":"119","endLine":40,"endColumn":2},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"113","severity":1,"message":"122","line":2,"column":35,"nodeType":"115","messageId":"116","endLine":2,"endColumn":45},{"ruleId":"113","severity":1,"message":"123","line":5,"column":10,"nodeType":"115","messageId":"116","endLine":5,"endColumn":24},{"ruleId":"109","severity":1,"message":"124","line":16,"column":8,"nodeType":"111","endLine":16,"endColumn":10,"suggestions":"125"},{"ruleId":"113","severity":1,"message":"126","line":1,"column":8,"nodeType":"115","messageId":"116","endLine":1,"endColumn":13},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'GetUserChat' and 'HubConnection'. Either include them or remove the dependency array.","ArrayExpression",["129"],"no-unused-vars","'isRegister' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["127"],["128"],"'withRouter' is defined but never used.","'ChatHubContext' is defined but never used.","React Hook useEffect has a missing dependency: 'GetAllUsers'. Either include it or remove the dependency array.",["130"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [GetUserChat, HubConnection]",{"range":"135","text":"136"},"Update the dependencies array to be: [GetAllUsers]",{"range":"137","text":"138"},[1061,1063],"[GetUserChat, HubConnection]",[602,604],"[GetAllUsers]"]